/*
 * Project: The Search - IN204
 * ENSTA ParisTech - Mars 2018
 * Authors: Caio GARCIA CANCIAN and Thales LOIOLA RAVELI
 * Version 1.0
 */
package GUI;
import ExternalSearch.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import querycorrection.*;

/**
 *
 * @author Caio GARCIA CANCIAN and Thales LOIOLA RAVELI
 * @version 1.0
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserInterface
     * @throws java.io.IOException
     */
    public UserInterface() throws IOException {
        initComponents();
        defaultOptions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroupSE = new javax.swing.ButtonGroup();
        buttonGroupQC = new javax.swing.ButtonGroup();
        buttonGroupLD = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        SearchField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ExtSugField = new javax.swing.JTextField();
        QCSugField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        QCStatsField = new javax.swing.JTextField();
        ExtStatsField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        OrigStatsField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        PropertiesMenu = new javax.swing.JMenu();
        SEMenu = new javax.swing.JMenu();
        GoogleRadioButton = new javax.swing.JRadioButtonMenuItem();
        BingRadioButton = new javax.swing.JRadioButtonMenuItem();
        QCMenu = new javax.swing.JMenu();
        NorvigRadioButton = new javax.swing.JRadioButtonMenuItem();
        SymSpellRadioButton = new javax.swing.JRadioButtonMenuItem();
        LDMenu = new javax.swing.JMenu();
        LD1 = new javax.swing.JRadioButtonMenuItem();
        LD2 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TitleLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TitleLabel.setText("The Search - IN204");

        SearchField.setText("Enter search query");

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("External Search Engine");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Query Correction System");

        jLabel3.setText("Suggestion");

        jLabel4.setText("Suggestion");

        ExtSugField.setEditable(false);

        QCSugField.setEditable(false);

        jLabel5.setText("Number of Results");

        jLabel6.setText("Number of Results");

        QCStatsField.setEditable(false);

        ExtStatsField.setEditable(false);

        jLabel8.setText("Number of Results - Original Search");

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(ExtSugField, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(ExtStatsField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(QCSugField, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(QCStatsField))
                .addGap(44, 44, 44))
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(TitleLabel))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(SearchButton)))))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(OrigStatsField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel)
                .addGap(50, 50, 50)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchButton))
                        .addGap(48, 48, 48)
                        .addComponent(jLabel7))
                    .addComponent(jLabel8))
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ExtSugField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QCSugField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QCStatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ExtStatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(45, Short.MAX_VALUE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OrigStatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        PropertiesMenu.setText("Properties");

        SEMenu.setText("Select search engine");

        GoogleRadioButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        buttonGroupSE.add(GoogleRadioButton);
        GoogleRadioButton.setSelected(true);
        GoogleRadioButton.setText("Google");
        GoogleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoogleRadioButtonActionPerformed(evt);
            }
        });
        SEMenu.add(GoogleRadioButton);

        BingRadioButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        buttonGroupSE.add(BingRadioButton);
        BingRadioButton.setText("Bing");
        BingRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BingRadioButtonActionPerformed(evt);
            }
        });
        SEMenu.add(BingRadioButton);

        PropertiesMenu.add(SEMenu);

        QCMenu.setText("Select Correction Algorithm");

        NorvigRadioButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        buttonGroupQC.add(NorvigRadioButton);
        NorvigRadioButton.setSelected(true);
        NorvigRadioButton.setText("Norvig");
        NorvigRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NorvigRadioButtonActionPerformed(evt);
            }
        });
        QCMenu.add(NorvigRadioButton);

        SymSpellRadioButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        buttonGroupQC.add(SymSpellRadioButton);
        SymSpellRadioButton.setText("SymSpell");
        SymSpellRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymSpellRadioButtonActionPerformed(evt);
            }
        });
        QCMenu.add(SymSpellRadioButton);

        PropertiesMenu.add(QCMenu);

        LDMenu.setText("Select Levenshtein Distance");

        buttonGroupLD.add(LD1);
        LD1.setSelected(true);
        LD1.setText("1 (recommended)");
        LD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LD1ActionPerformed(evt);
            }
        });
        LDMenu.add(LD1);

        buttonGroupLD.add(LD2);
        LD2.setText("2 (more agressive correction)");
        LD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LD2ActionPerformed(evt);
            }
        });
        LDMenu.add(LD2);

        PropertiesMenu.add(LDMenu);

        jMenuBar1.add(PropertiesMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * Method to set the default options of the GUI and to load necessary dictionaries and data structures
     * that will be used while the software is running
     * @throws IOException 
     */
    private void defaultOptions () throws IOException
    {
        System.out.println("####### START OF SETUP #######");
        
        // Sets Google as default search engine
        Search = new GoogleHandler("https://www.google.com/");
        
        // Creates Bigram from default file
        n = new Ngram(2);
        NgramDict = n.loadFromFile("w2.txt");
        System.out.println("Ngram dictionary loaded");
        
        // Sets SysmSpell as default algorithm
        option = true;
        try {
            SymSug = new SymSpell();
            SymSug.setMAXDISTANCE(1);
            SymSug.setNgramDict(NgramDict);
            SymSug.CreateDictionary("big.txt", "");
        } catch (FileNotFoundException ex) {
            System.out.println(ex);
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("SymSpell loaded");
        
        // Initializes Norvig's dictionary too
        try { 
            NorSug = new Norvig("big.txt");
            NorSug.setMAXDISTANCE(1);
            NorSug.setNgramDict(NgramDict);
            System.out.println("Norvig loaded");
        } catch (IOException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println("####### SETUP COMPLETED #######");

    }
    
    /**
     * Method that executes the main functionality of the software: after the search button is pressed
     * gets the UserQuery and corrects it using the ExternalSearch and the QuerySuggestion; compares the 
     * results showing the search statistics.
     * @param evt 
     */
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // Gets user query
        String UserQuery = SearchField.getText();
        String OrigStats = Search.getSearchStats(UserQuery);
        OrigStatsField.setText(OrigStats);
        
        // Gets suggestion and stats from the external search engine
        String seSug = Search.getSearchSuggestion(UserQuery);
        ExtSugField.setText(seSug);
        if (seSug.equals("No suggestions from Google") || seSug.equals("No suggestions from Bing")) {
            ExtStatsField.setText(OrigStats);
        } else {
            ExtStatsField.setText(Search.getSearchStats(seSug));
        }
        
        // Gets suggestion from internal query correction system (depending on the choice of the algorithm)
        String ourSug;
        if (option) {
            ourSug = SymSug.CorrectedQuery(UserQuery);
            if (ourSug.equalsIgnoreCase(UserQuery)) {
                QCSugField.setText("No suggestions from us");
                QCStatsField.setText(OrigStats);   
            } else {
                QCSugField.setText(ourSug);
                QCStatsField.setText(Search.getSearchStats(ourSug));
            }
            
        } else {
            ourSug = NorSug.CorrectedQuery(UserQuery);
            if (ourSug.equalsIgnoreCase(UserQuery)) {
                QCSugField.setText("No suggestions from us");
                QCStatsField.setText(OrigStats);   
            } else {
                QCSugField.setText(ourSug);
                QCStatsField.setText(Search.getSearchStats(ourSug));
            }
        }
        
    }                                            

    /**
     * Selects Google as external search engine
     * @param evt 
     */
    private void GoogleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        Search = new GoogleHandler("https://www.google.com/");
        System.out.println("Google selected");
    }                                                 

    /**
     * Selects Bing as external search engine
     * @param evt 
     */
    private void BingRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        Search = new BingHandler("https://www.bing.com/");
        System.out.println("Bing selected");
    }                                               

    /**
     * Selects Norvig as correction algorithm
     * @param evt 
     */
    private void NorvigRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        option = false;
        NorSug.setMAXDISTANCE(dist);
        System.out.println("Norvig selected");
    }                                                 

    /**
     * Selects SymSpell as correction algorithm
     * @param evt 
     */
    private void SymSpellRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        option = true;
        SymSug.setMAXDISTANCE(dist);
        System.out.println("SymSpell selected");
    }                                                   

    /**
     * Changes Levenshtein distance to 1
     * @param evt 
     */
    private void LD1ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        dist = 1;
        if (option) {
            SymSug.setMAXDISTANCE(1);
        } else {
            NorSug.setMAXDISTANCE(1);
        }
        System.out.println("Distance 1 selected");
    }                                   
    
    /**
     * Changes Levenshtein distance to 2
     * @param evt 
     */
    private void LD2ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        dist = 2;
        if (option) {
            SymSug.setMAXDISTANCE(2);
        } else {
            NorSug.setMAXDISTANCE(2);
        }
        System.out.println("Distance 2 selected");
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UserInterface().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    
    // Non GUI Variables 
    private ExternalSearchEngine Search;
    private SymSpell SymSug;
    private Norvig NorSug;
    private boolean option;
    private Ngram n;
    private HashMap<Ngram,Double> NgramDict;
    private int dist;
    
    
    // Variables declaration - do not modify                     
    private javax.swing.JRadioButtonMenuItem BingRadioButton;
    private javax.swing.JTextField ExtStatsField;
    private javax.swing.JTextField ExtSugField;
    private javax.swing.JRadioButtonMenuItem GoogleRadioButton;
    private javax.swing.JRadioButtonMenuItem LD1;
    private javax.swing.JRadioButtonMenuItem LD2;
    private javax.swing.JMenu LDMenu;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JRadioButtonMenuItem NorvigRadioButton;
    private javax.swing.JTextField OrigStatsField;
    private javax.swing.JMenu PropertiesMenu;
    private javax.swing.JMenu QCMenu;
    private javax.swing.JTextField QCStatsField;
    private javax.swing.JTextField QCSugField;
    private javax.swing.JMenu SEMenu;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JRadioButtonMenuItem SymSpellRadioButton;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.ButtonGroup buttonGroupLD;
    private javax.swing.ButtonGroup buttonGroupQC;
    private javax.swing.ButtonGroup buttonGroupSE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration                   
}
